// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace oneGame
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using UnityEngine.SceneManagement;
    using MoreMountains.Tools;
    using MoreMountains.CorgiEngine;
    using QFramework;

    public class UIGamePanelData : QFramework.UIPanelData
    {
        /// <summary>
        /// 死亡次数
        /// </summary>
        public int DeathCount;

        /// <summary>
        /// 打开 GamePanel 的初始关卡
        /// </summary>
        public string InitLevelName = "Level8";
    }
    
    public partial class UIGamePanel : QFramework.UIPanel, MMEventListener<CorgiEngineEvent>
    {

        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as UIGamePanelData ?? new UIGamePanelData();

            // please add init code here
            SceneManager.LoadScene(mData.InitLevelName);

            this.MMEventStartListening<CorgiEngineEvent>();

            SceneManager.sceneLoaded += OnSceneLoaded;
        }

        public void OnMMEvent(CorgiEngineEvent eventType)
        {
            if (eventType.EventType == CorgiEngineEventTypes.PlayerDeath)
            {
                mData.DeathCount++;
                // 更新UI
                TxtDeathCount.text = string.Format("Death Count : {0}", mData.DeathCount);
                // 播放死亡的声音
                this.SendMsg(new AudioSoundMsg(QAssetBundle.Sounds.HIT));
            }
        }

        void OnSceneLoaded(Scene scene, LoadSceneMode mode)
        {
            if (scene.name == "GameWin")
            {
                CloseSelf();
                UIMgr.OpenPanel<UIGameOverPanel>(new UIGameOverPanelData()
                {
                    DeathCountCurrent = mData.DeathCount
                });
            }
            else if (scene.name.StartsWith("Level"))
            {
                TxtLevelName.text = scene.name;
            }
            else
            {
                TxtLevelName.text = string.Empty;
            }
        }

        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }

        protected override void RegisterUIEvent()
        {

        }

        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
            this.MMEventStopListening<CorgiEngineEvent>();
            SceneManager.sceneLoaded -= OnSceneLoaded;
        }


    }
}
