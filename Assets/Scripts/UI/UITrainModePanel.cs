// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System.Collections.Generic;
using QFramework;
using UnityEngine.UI;
using UniRx;

namespace oneGame
{

    public class UITrainModePanelData : QFramework.UIPanelData
    {
        public List<string> UnLockLevelNames
        {
            get
            {
                int curLevelIndex = LevelConfig.CurLevelIndex(GameData.CurLevelName);

                List<string> unlockLevelNames = LevelConfig.LevelNamesOrder.GetRange(0, curLevelIndex + 1);

                return unlockLevelNames;
            }
        }
    }
    
    public partial class UITrainModePanel : QFramework.UIPanel
    {
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            throw new System.NotImplementedException ();
        }

        protected override void RegisterUIEvent()
        {
            BtnBack.OnClickAsObservable().Subscribe(_ =>
            {
                SendMsg(new AudioSoundMsg("click"));
                CloseSelf();
                UIMgr.OpenPanel<UIHomePanel>();
            });
        }

        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as UITrainModePanelData ?? new UITrainModePanelData();
            // please add init code here

            mData.UnLockLevelNames.ForEach(levelName =>
            {
                UILevelItemTemplate.Instantiate()
                .Parent(Content)
                .LocalIdentity()
                .ApplySelfTo(self =>
                {
                    self.Init(levelName);
                    self.Show();
                });

            });

            Observable.NextFrame().Subscribe(_ =>
            {
                var preferredHeight = Content.GetComponent<GridLayoutGroup>().preferredHeight;
                if (preferredHeight > 560)
                {
                    Content.GetComponent<ContentSizeFitter>().Enable();
                }
            });
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }
}
